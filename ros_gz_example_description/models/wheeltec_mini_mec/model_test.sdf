<?xml version="1.0"?>
<sdf version="1.8" xmlns:xacro="http://ros.org/wiki/xacro">
  <model name="wheeltec_mini_mec" xmlns:ignition="http://ignitionrobotics.org/schema"
    canonical_link='base_link'>

    <!-- Define some commonly used inertial properties  -->
    <xacro:macro name="box_inertia" params="m w h d">
      <inertial>
        <pose>0 0 0 ${pi/2} 0 ${pi/2}</pose>
        <mass>${m}</mass>
        <inertia>
          <ixx>${(m/12) * (h*h + d*d)}</ixx>
          <ixy>0.0</ixy>
          <ixz>0.0</ixz>
          <iyy>${(m/12) * (w*w + d*d)}</iyy>
          <iyz>0.0</iyz>
          <izz>${(m/12) * (w*w + h*h)}</izz>
        </inertia>
      </inertial>
    </xacro:macro>

    <xacro:macro name="cylinder_inertia" params="m r h">
      <inertial>
        <pose>0 0 0 ${pi/2} 0 0</pose>
        <mass>${m}</mass>
        <inertia>
          <ixx>${(m/12) * (3*r*r + h*h)}</ixx>
          <ixy>0.0</ixy>
          <ixz>0.0</ixz>
          <iyy>${(m/12) * (3*r*r + h*h)}</iyy>
          <iyz>0.0</iyz>
          <izz>${(m/2) * (r*r)}</izz>
        </inertia>
      </inertial>
    </xacro:macro>

    <!-- Robot Base -->
    <link name="base_link">
      <must_be_base_link>true</must_be_base_link>
      <inertial>
        <mass>1.26</mass>
        <inertia>
          <ixx>0.00391125</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>0.007972125</iyy>
          <iyz>0</iyz>
          <izz>0.011248125</izz>
        </inertia>
      </inertial>
      <visual name='visual'>
        <geometry>
          <box>
            <size>0.27 0.185 0.055</size>
          </box>
          <!-- <mesh>
              <uri>
                model://ros_gz_example_description/models/wheeltec_mini_mec/meshes/base_link.STL
              </uri>
            </mesh> -->
        </geometry>
        <material>
          <ambient>0.5 0.5 1.0 1</ambient>
          <diffuse>0.5 0.5 1.0 1</diffuse>
          <specular>0.0 0.0 1.0 1</specular>
        </material>
      </visual>
      <collision name='collision'>
        <geometry>
          <box>
            <size>0.27 0.185 0.055</size>
          </box>
        </geometry>
      </collision>
    </link>

    <!-- Robot Footprint -->
    <link name='base_footprint'>
      <pose relative_to="base_joint" />
      <xacro:box_inertia m="0.0" w="0.0" d="0.0" h="0.0" />
    </link>

    <joint name='base_joint' type='fixed'>
      <parent>base_link</parent>
      <child>base_footprint</child>
      <pose relative_to="base_link">0.0 0.0 -0.0975 0 0 0</pose>
    </joint>

    <!-- Wheels -->
    <link name="left_wheel_link">
      <pose relative_to="left_wheel_joint" />
      <inertial>
        <mass>0.41</mass>
        <inertia>
          <ixx>0.000179127291666667</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>0.000179127291666667</iyy>
          <iyz>0</iyz>
          <izz>0.00028828125</izz>
        </inertia>
      </inertial>
      <visual name='visual'>
        <!-- <pose>0 0 -0.01625 1.5707 0 0</pose> -->
        <geometry>
          <sphere>
            <radius>0.0375</radius>
          </sphere>
          <!-- scale mesh to radius == 0.0375 -->
          <!-- <mesh>
              <uri>https://fuel.gazebosim.org/1.0/OpenRobotics/models/Mecanum
                lift/tip/files/meshes/mecanum_wheel_right.STL</uri>
              <uri>
                model://ros_gz_example_description/models/wheeltec_mini_mec/meshes/left_rear_wheel_link.STL
              </uri>
              <scale>0.00075 0.00075 0.00075</scale>
            </mesh> -->
        </geometry>
        <material>
          <ambient>0.2 0.2 0.2 1</ambient>
          <diffuse>0.2 0.2 0.2 1</diffuse>
          <specular>0.2 0.2 0.2 1</specular>
        </material>
      </visual>
      <collision name='collision'>
        <geometry>
          <sphere>
            <radius>0.0375</radius>
          </sphere>
        </geometry>
        <surface>
          <friction>
            <ode>
              <mu>1.0</mu>
              <mu2>0.0</mu2>
              <fdir1 ignition:expressed_in="base_link">1 1 0</fdir1>
            </ode>
          </friction>
        </surface>
      </collision>
    </link>

    <joint name="left_wheel_joint" type="revolute">
      <parent>base_link</parent>
      <child>left_wheel_link</child>
      <pose relative_to="base_link">-0.085 0.0975 -0.06 -1.57 0 0</pose>
      <axis>
        <xyz>0 0 1</xyz>
        <limit>
          <lower>-1.79769e+308</lower>
          <upper>1.79769e+308</upper>
        </limit>
      </axis>
    </joint>

    <link name="right_wheel_link">
      <pose relative_to="right_wheel_joint" />
      <inertial>
        <mass>0.41</mass>
        <inertia>
          <ixx>0.000179127291666667</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>0.000179127291666667</iyy>
          <iyz>0</iyz>
          <izz>0.00028828125</izz>
        </inertia>
      </inertial>
      <visual name='visual'>
        <!-- <pose>0 0 -0.01625 1.5707 0 0</pose> -->
        <geometry>
          <sphere>
            <radius>0.0375</radius>
          </sphere>
          <!-- scale mesh to radius == 0.0375 -->
          <!-- <mesh>
              <uri>https://fuel.gazebosim.org/1.0/OpenRobotics/models/Mecanum
                lift/tip/files/meshes/mecanum_wheel_right.STL</uri>
              <uri>
                model://ros_gz_example_description/models/wheeltec_mini_mec/meshes/left_rear_wheel_link.STL
              </uri>
              <scale>0.00075 0.00075 0.00075</scale>
            </mesh> -->
        </geometry>
        <material>
          <ambient>0.2 0.2 0.2 1</ambient>
          <diffuse>0.2 0.2 0.2 1</diffuse>
          <specular>0.2 0.2 0.2 1</specular>
        </material>
      </visual>
      <collision name='collision'>
        <geometry>
          <sphere>
            <radius>0.0375</radius>
          </sphere>
        </geometry>
        <surface>
          <friction>
            <ode>
              <mu>1.0</mu>
              <mu2>0.0</mu2>
              <fdir1 ignition:expressed_in="base_link">1 -1 0</fdir1>
            </ode>
          </friction>
        </surface>
      </collision>
    </link>

    <joint name="right_wheel_joint" type="revolute">
      <parent>base_link</parent>
      <child>right_wheel_link</child>
      <pose relative_to="base_link">-0.085 -0.0975 -0.06 -1.57 0 0</pose>
      <axis>
        <xyz>0 0 1</xyz>
        <limit>
          <lower>-1.79769e+308</lower>
          <upper>1.79769e+308</upper>
        </limit>
      </axis>
    </joint>

    <link name="left_front_link">
      <pose relative_to="left_front_joint" />
      <inertial>
        <mass>0.41</mass>
        <inertia>
          <ixx>0.000179127291666667</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>0.000179127291666667</iyy>
          <iyz>0</iyz>
          <izz>0.00028828125</izz>
        </inertia>
      </inertial>
      <visual name='visual'>
        <!-- <pose>0 0 -0.01625 1.5707 0 0</pose> -->
        <geometry>
          <sphere>
            <radius>0.0375</radius>
          </sphere>
          <!-- scale mesh to radius == 0.0375 -->
          <!-- <mesh>
              <uri>https://fuel.gazebosim.org/1.0/OpenRobotics/models/Mecanum
                lift/tip/files/meshes/mecanum_wheel_right.STL</uri>
              <uri>
                model://ros_gz_example_description/models/wheeltec_mini_mec/meshes/left_rear_wheel_link.STL
              </uri>
              <scale>0.00075 0.00075 0.00075</scale>
            </mesh> -->
        </geometry>
        <material>
          <ambient>0.2 0.2 0.2 1</ambient>
          <diffuse>0.2 0.2 0.2 1</diffuse>
          <specular>0.2 0.2 0.2 1</specular>
        </material>
      </visual>
      <collision name='collision'>
        <geometry>
          <sphere>
            <radius>0.0375</radius>
          </sphere>
        </geometry>
        <surface>
          <friction>
            <ode>
              <mu>1.0</mu>
              <mu2>0.0</mu2>
              <fdir1 ignition:expressed_in="base_link">1 -1 0</fdir1>
            </ode>
          </friction>
        </surface>
      </collision>
    </link>

    <joint name="left_front_joint" type="revolute">
      <parent>base_link</parent>
      <child>left_front_link</child>
      <pose relative_to="base_link">0.085 0.0975 -0.06 -1.57 0 0</pose>
      <axis>
        <xyz>0 0 1</xyz>
        <limit>
          <lower>-1.79769e+308</lower>
          <upper>1.79769e+308</upper>
        </limit>
      </axis>
    </joint>

    <link name="right_front_link">
      <pose relative_to="right_front_joint" />
      <inertial>
        <mass>0.41</mass>
        <inertia>
          <ixx>0.000179127291666667</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>0.000179127291666667</iyy>
          <iyz>0</iyz>
          <izz>0.00028828125</izz>
        </inertia>
      </inertial>
      <visual name='visual'>
        <!-- <pose>0 0 -0.01625 1.5707 0 0</pose> -->
        <geometry>
          <sphere>
            <radius>0.0375</radius>
          </sphere>
          <!-- scale mesh to radius == 0.0375 -->
          <!-- <mesh>
              <uri>https://fuel.gazebosim.org/1.0/OpenRobotics/models/Mecanum
                lift/tip/files/meshes/mecanum_wheel_right.STL</uri>
              <uri>
                model://ros_gz_example_description/models/wheeltec_mini_mec/meshes/left_rear_wheel_link.STL
              </uri>
              <scale>0.00075 0.00075 0.00075</scale>
            </mesh> -->
        </geometry>
        <material>
          <ambient>0.2 0.2 0.2 1</ambient>
          <diffuse>0.2 0.2 0.2 1</diffuse>
          <specular>0.2 0.2 0.2 1</specular>
        </material>
      </visual>
      <collision name='collision'>
        <geometry>
          <sphere>
            <radius>0.0375</radius>
          </sphere>
        </geometry>
        <surface>
          <friction>
            <ode>
              <mu>1.0</mu>
              <mu2>0.0</mu2>
              <fdir1 ignition:expressed_in="base_link">1 1 0</fdir1>
            </ode>
          </friction>
        </surface>
      </collision>
    </link>

    <joint name="right_front_joint" type="revolute">
      <parent>base_link</parent>
      <child>right_front_link</child>
      <pose relative_to="base_link">0.085 -0.0975 -0.06 -1.57 0 0</pose>
      <axis>
        <xyz>0 0 1</xyz>
        <limit>
          <lower>-1.79769e+308</lower>
          <upper>1.79769e+308</upper>
        </limit>
      </axis>
    </joint>

    <!-- Sensor -->
    <joint name='imu_joint' type='fixed'>
      <parent>base_link</parent>
      <child>imu_link</child>
      <pose relative_to="base_link">0.0 0.0 0.01 0 0 0</pose>
    </joint>

    <link name='imu_link'>
      <pose relative_to="imu_joint" />
      <visual name="imu_link_visual">
        <geometry>
          <box>
            <size>
              0.05 0.05 0.05
            </size>
          </box>
        </geometry>
      </visual>

      <collision name="imu_link_collision">
        <geometry>
          <box>
            <size>
              0.05 0.05 0.05
            </size>
          </box>
        </geometry>
      </collision>

      <xacro:box_inertia m="0.01" w="0.05" d="0.05" h="0.05" />

      <sensor name="imu_sensor" type="imu">
        <always_on>true</always_on>
        <update_rate>100</update_rate>
        <visualize>true</visualize>
        <topic>demo/imu</topic>
        <gz_frame_id>imu_link</gz_frame_id>
        <imu>
          <angular_velocity>
            <x>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>2e-4</stddev>
                <bias_mean>0.0000075</bias_mean>
                <bias_stddev>0.0000008</bias_stddev>
              </noise>
            </x>
            <y>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>2e-4</stddev>
                <bias_mean>0.0000075</bias_mean>
                <bias_stddev>0.0000008</bias_stddev>
              </noise>
            </y>
            <z>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>2e-4</stddev>
                <bias_mean>0.0000075</bias_mean>
                <bias_stddev>0.0000008</bias_stddev>
              </noise>
            </z>
          </angular_velocity>
          <linear_acceleration>
            <x>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>1.7e-2</stddev>
                <bias_mean>0.1</bias_mean>
                <bias_stddev>0.001</bias_stddev>
              </noise>
            </x>
            <y>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>1.7e-2</stddev>
                <bias_mean>0.1</bias_mean>
                <bias_stddev>0.001</bias_stddev>
              </noise>
            </y>
            <z>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>1.7e-2</stddev>
                <bias_mean>0.1</bias_mean>
                <bias_stddev>0.001</bias_stddev>
              </noise>
            </z>
          </linear_acceleration>
        </imu>
      </sensor>
    </link>

    <joint name="lidar_joint" type="fixed">
      <parent>base_link</parent>
      <child>lidar_link</child>
      <pose relative_to="base_link">0.0 0.0 0.12 0 0 0</pose>
    </joint>

    <link name='lidar_link'>
      <pose relative_to="lidar_joint" />
      <visual name="lidar_link_visual">
        <geometry>
          <cylinder>
            <radius>0.025</radius>
            <length>0.035</length>
          </cylinder>
        </geometry>
      </visual>

      <collision name="lidar_link_collision">
        <geometry>
          <cylinder>
            <radius>0.025</radius>
            <length>0.035</length>
          </cylinder>
        </geometry>
      </collision>

      <xacro:cylinder_inertia m="0.1" r="0.025" h="0.035" />

      <sensor name="lslidar_n10p" type="gpu_lidar">
        <always_on>true</always_on>
        <visualize>true</visualize>
        <update_rate>10</update_rate>
        <topic>scan</topic>
        <gz_frame_id>lidar_link</gz_frame_id>
        <ray>
          <scan>
            <horizontal>
              <samples>360</samples>
              <resolution>1.000000</resolution>
              <min_angle>0.000000</min_angle>
              <max_angle>6.280000</max_angle>
            </horizontal>
          </scan>
          <range>
            <min>0.08</min>
            <max>10.0</max>
            <resolution>0.015000</resolution>
          </range>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.01</stddev>
          </noise>
        </ray>
      </sensor>
    </link>

    <joint name="camera_joint" type="fixed">
      <parent>base_link</parent>
      <child>camera_link</child>
      <pose relative_to="base_link">0.215 0 0.05 0 0 0</pose>
    </joint>

    <link name='camera_link'>
      <pose relative_to="camera_joint" />
      <visual name="camera_link_visual">
        <geometry>
          <box>
            <size>
              0.015 0.130 0.0222
            </size>
          </box>
        </geometry>
      </visual>

      <collision name="camera_link_collision">
        <geometry>
          <box>
            <size>
              0.015 0.130 0.0222
            </size>
          </box>
        </geometry>
      </collision>

      <xacro:box_inertia m="0.035" w="0.015" d="0.130" h="0.0222" />

      <sensor name="camera" type="camera">
        <always_on>true</always_on>
        <visualize>true</visualize>
        <update_rate>30</update_rate>
        <topic>/camera/image_raw</topic>
        <gz_frame_id>camera_image_frame</gz_frame_id>
        <camera>
          <camera_info_topic>camera/camera_info</camera_info_topic>
          <horizontal_fov>1.02974</horizontal_fov>
          <image>
            <width>1920</width>
            <height>1080</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.02</near>
            <far>300</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <!-- Noise is sampled independently per pixel on each frame.
                  That pixel's noise value is added to each of its color
                  channels, which at that point lie in the range [0,1]. -->
            <mean>0.0</mean>
            <stddev>0.007</stddev>
          </noise>
        </camera>
      </sensor>
    </link>

    <link name="camera_image_frame" >
      <pose relative_to="camera_image_joint" />
      <xacro:box_inertia m="0.0" w="0.0" d="0.0" h="0.0" />
    </link>

    <joint name="camera_image_joint" type="fixed">
      <parent>camera_link</parent>
      <child>camera_image_frame</child>
      <pose relative_to="camera_link">0 0 0 -1.570796327 0 -1.570796327</pose>
    </joint>

    <plugin
      filename="ignition-gazebo-mecanum-drive-system"
      name="ignition::gazebo::systems::MecanumDrive">
      <front_left_joint>left_front_joint</front_left_joint>
      <front_right_joint>right_front_joint</front_right_joint>
      <back_left_joint>left_wheel_joint</back_left_joint>
      <back_right_joint>right_wheel_joint</back_right_joint>
      <wheel_separation>0.195</wheel_separation>
      <wheelbase>0.17</wheelbase>
      <wheel_radius>0.0375</wheel_radius>
      <min_acceleration>-1</min_acceleration>
      <max_acceleration>1</max_acceleration>
    </plugin>

    <plugin
      filename="ignition-gazebo-joint-state-publisher-system"
      name="ignition::gazebo::systems::JointStatePublisher">
      <topic>joint_states</topic>
    </plugin>

    <plugin
      filename="ignition-gazebo-odometry-publisher-system"
      name="ignition::gazebo::systems::OdometryPublisher">
      <odom_topic>/demo/odom</odom_topic>
      <odom_frame>odom</odom_frame>
      <tf_topic>/tf</tf_topic>
      <robot_base_frame>base_link</robot_base_frame>
    </plugin>

  </model>
</sdf>